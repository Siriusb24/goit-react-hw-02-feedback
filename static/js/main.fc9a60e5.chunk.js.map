{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedback.module.css","components/Section/Section.module.css","components/Notification/Nitification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Nitification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","list","Object","keys","map","button","item","type","onClick","Notification","message","text","defaultProps","Statistics","good","neutral","bad","totalCounter","totalPercentage","totalFeedback","positivePercent","Section","title","children","section","App","state","event","value","target","textContent","setState","prevState","countTotalFeedback","reduce","sum","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,iBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,6B,uLCEV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGC,OAAOC,KAAKN,GAASO,KAAI,SAAAC,GACxB,OACE,oBAAiBN,UAAWC,IAAEM,KAA9B,SACE,wBACEC,KAAK,SACLC,QAASV,EACTC,UAAWC,IAAEK,OAHf,SAKGA,KANIA,Q,qBCNJ,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGX,UAAWC,IAAEW,KAAhB,SAAuBD,IAGhCD,EAAaG,aAAe,CAC1BF,QAAS,qB,oBCJI,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAEMC,EAAgBF,IAChBG,EAAkBF,IAExB,OACE,8BACGC,EACC,qBAAIpB,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEM,KAAjB,mBACQ,+BAAOQ,OAEf,qBAAIf,UAAWC,IAAEM,KAAjB,sBACW,+BAAOS,OAElB,qBAAIhB,UAAWC,IAAEM,KAAjB,kBACO,+BAAOU,OAEd,qBAAIjB,UAAWC,IAAEM,KAAjB,oBACS,+BAAOa,OAEhB,qBAAIpB,UAAWC,IAAEM,KAAjB,gCACqB,iCAAOc,EAAP,aAIvB,cAACX,EAAD,CAAcC,QAAS,wB,oBChChB,SAASW,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASxB,UAAWC,IAAEwB,QAAtB,UACE,oBAAIzB,UAAWC,IAAEsB,MAAjB,SAAyBA,IACxBC,K,UCDcE,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPlB,gBAAkB,SAAA6B,GAChB,IAAMC,EAAQD,EAAME,OAAOC,YAE3B,EAAKC,UAAS,SAAAC,GAAS,sBAAQJ,EAASI,EAAUJ,IAAU,O,EAK9DK,mBAAqB,WAMnB,OALc/B,OAAOC,KAAK,EAAKuB,OAAOQ,QACpC,SAACC,EAAKP,GAAN,OAAgBO,EAAM,EAAKT,MAAME,KACjC,I,EAMJQ,gCAAkC,WAKhC,OAJuBC,KAAKC,MACP,IAAlB,EAAKZ,MAAMZ,KAAc,EAAKmB,uB,4CAMnC,WACE,MAA+BM,KAAKb,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAACK,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC1B,EAAD,CACEC,QAAS0C,KAAKb,MACd5B,gBAAiByC,KAAKzC,oBAG1B,cAACuB,EAAD,CAASC,MAAM,aAAf,SACE,cAACT,EAAD,CACEC,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,aAAcsB,KAAKN,mBACnBf,gBAAiBqB,KAAKH,2C,GAjDDI,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc9a60e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3IZws\",\"item\":\"Statistics_item__26zkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__G43g1\",\"item\":\"Feedback_item__3lzvw\",\"button\":\"Feedback_button__8Av52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3OAbf\",\"title\":\"Section_title__1PTPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Nitification_text__SpDk1\"};","import PropTypes from 'prop-types';\nimport s from 'components/FeedbackOptions/Feedback.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  //console.log(Object.keys(options))\n  return (\n    <ul className={s.list}>\n      {Object.keys(options).map(button => {\n        return (\n          <li key={button} className={s.item}>\n            <button\n              type=\"button\"\n              onClick={onLeaveFeedback}\n              className={s.button}\n            >\n              {button}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Notification/Nitification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.defaultProps = {\n  message: 'No feedback given',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Nitification';\nimport s from 'components/Statistics/Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCounter,\n  totalPercentage,\n}) {\n  const totalFeedback = totalCounter();\n  const positivePercent = totalPercentage();\n\n  return (\n    <div>\n      {totalFeedback ? (\n        <ul className={s.list}>\n          <li className={s.item}>\n            Good: <span>{good}</span>\n          </li>\n          <li className={s.item}>\n            Neutral: <span>{neutral}</span>\n          </li>\n          <li className={s.item}>\n            Bad: <span>{bad}</span>\n          </li>\n          <li className={s.item}>\n            Total: <span>{totalFeedback}</span>\n          </li>\n          <li className={s.item}>\n            Positive Feedback: <span>{positivePercent}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCounter: PropTypes.number.isRequired,\n  totalPercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'components/Section/Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from 'components/Section/Section';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const value = event.target.textContent;\n\n    this.setState(prevState => ({ [value]: (prevState[value] += 1) }));\n    //console.log(this.state)\n    //console.log(event)\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.keys(this.state).reduce(\n      (sum, value) => sum + this.state[value],\n      0,\n    );\n    //console.log(total)\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positivPercent = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n\n    return positivPercent;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    //console.log(Object.keys(this.state))\n    return (\n      <>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            totalCounter={this.countTotalFeedback}\n            totalPercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}