{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedback.module.css","components/Section/Section.module.css","components/Notification/Nitification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Nitification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","list","Object","keys","map","button","item","type","onClick","Notification","message","text","defaultProps","Statistics","good","neutral","bad","totalCounter","totalPercentage","totalFeedback","positivePercent","Section","title","children","section","App","state","event","value","target","textContent","setState","prevState","countTotalFeedback","reduce","sum","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,iBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,6B,uLCEV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGC,OAAOC,KAAKN,GAASO,KAAI,SAAAC,GACxB,OACE,oBAAiBN,UAAWC,IAAEM,KAA9B,SACE,wBACEC,KAAK,SACLC,QAASV,EACTC,UAAWC,IAAEK,OAHf,SAKGA,KANIA,Q,qBCNJ,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGX,UAAWC,IAAEW,KAAhB,SAAuBD,IAGhCD,EAAaG,aAAe,CAC1BF,QAAS,qB,oBCJI,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAEMC,EAAgBF,IAChBG,EAAkBF,IAExB,OACE,8BACGC,EACC,qBAAIpB,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEM,KAAjB,mBACQ,+BAAOQ,OAEf,qBAAIf,UAAWC,IAAEM,KAAjB,sBACW,+BAAOS,OAElB,qBAAIhB,UAAWC,IAAEM,KAAjB,kBACO,+BAAOU,OAEd,qBAAIjB,UAAWC,IAAEM,KAAjB,oBACS,+BAAOa,OAEhB,qBAAIpB,UAAWC,IAAEM,KAAjB,gCACqB,iCAAOc,EAAP,aAIvB,cAACX,EAAD,CAAcC,QAAS,wB,oBChChB,SAASW,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASxB,UAAWC,IAAEwB,QAAtB,UACE,oBAAIzB,UAAWC,IAAEsB,MAAjB,SAAyBA,IACxBC,K,UCDcE,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPlB,gBAAkB,SAAA6B,GAChB,IAAMC,EAAQD,EAAME,OAAOC,YAE3B,EAAKC,UAAS,SAAAC,GAAS,sBAAQJ,EAASI,EAAUJ,IAAU,O,EAK9DK,mBAAqB,WAMnB,OALc/B,OAAOC,KAAK,EAAKuB,OAAOQ,QACpC,SAACC,EAAKP,GAAN,OAAgBO,EAAM,EAAKT,MAAME,KACjC,I,EAMJQ,gCAAkC,WAKhC,OAJuBC,KAAKC,MACP,IAAlB,EAAKZ,MAAMZ,KAAc,EAAKmB,uB,4CAMnC,WACE,MAA+BM,KAAKb,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAACK,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC1B,EAAD,CACEC,QAAS0C,KAAKb,MACd5B,gBAAiByC,KAAKzC,oBAG1B,cAACuB,EAAD,CAASC,MAAM,aAAf,SACE,cAACT,EAAD,CACEC,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,aAAcsB,KAAKN,mBACnBf,gBAAiBqB,KAAKH,2C,GAjDDI,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d891a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3IZws\",\"item\":\"Statistics_item__26zkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__G43g1\",\"item\":\"Feedback_item__3lzvw\",\"button\":\"Feedback_button__8Av52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3OAbf\",\"title\":\"Section_title__1PTPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Nitification_text__SpDk1\"};","import PropTypes from 'prop-types';\r\nimport s from 'components/FeedbackOptions/Feedback.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  //console.log(Object.keys(options))\r\n  return (\r\n    <ul className={s.list}>\r\n      {Object.keys(options).map(button => {\r\n        return (\r\n          <li key={button} className={s.item}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onLeaveFeedback}\r\n              className={s.button}\r\n            >\r\n              {button}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/Notification/Nitification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.text}>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Nitification';\nimport s from 'components/Statistics/Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCounter,\n  totalPercentage,\n}) {\n  const totalFeedback = totalCounter();\n  const positivePercent = totalPercentage();\n\n  return (\n    <div>\n      {totalFeedback ? (\n        <ul className={s.list}>\n          <li className={s.item}>\n            Good: <span>{good}</span>\n          </li>\n          <li className={s.item}>\n            Neutral: <span>{neutral}</span>\n          </li>\n          <li className={s.item}>\n            Bad: <span>{bad}</span>\n          </li>\n          <li className={s.item}>\n            Total: <span>{totalFeedback}</span>\n          </li>\n          <li className={s.item}>\n            Positive Feedback: <span>{positivePercent}%</span>\n          </li>\n        </ul>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalCounter: PropTypes.func.isRequired,\n  totalPercentage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\r\nimport s from 'components/Section/Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from 'components/Section/Section';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n    const value = event.target.textContent;\r\n\r\n    this.setState(prevState => ({ [value]: (prevState[value] += 1) }));\r\n    //console.log(this.state)\r\n    //console.log(event)\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = Object.keys(this.state).reduce(\r\n      (sum, value) => sum + this.state[value],\r\n      0,\r\n    );\r\n    //console.log(total)\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positivPercent = Math.round(\r\n      (this.state.good * 100) / this.countTotalFeedback(),\r\n    );\r\n\r\n    return positivPercent;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    //console.log(Object.keys(this.state))\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave Feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            bad={bad}\r\n            neutral={neutral}\r\n            totalCounter={this.countTotalFeedback}\r\n            totalPercentage={this.countPositiveFeedbackPercentage}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}